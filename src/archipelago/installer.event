// Check whether the player is safe to perform item receiving / deathlinks
PUSH; ORG $4FD94; jumpToHack(playerSafe); POP // Fade Main 0x804FD94 (one of the few functions called every frame in all game states)
ALIGN 4
playerSafe:
#incbin "asm/playerSafe.dmp"
WORD 0x2002A4A // Address to save whether it's safe to handle items or not, 1 if safe
POIN singleValueCheck
POIN multiValueCheck
// Checks that Action Flags (0x3003FB0) are set to any of the allowed flags
// Allowed list:
// 0x000002 = Riding Platform
// 0x004000 = Cursed
// 0x010000 = Will Respawn to Platform
// 0x020000 = In Gyorg Fight
// 0x040000 = Rolling
// 0x400000 = Has Clones
// 0x800000 = Lantern On
WORD 0x00C74002

// Checks that the address is equal to the value after it
// Address to check; Value;
ALIGN 4
singleValueCheck:
WORD 0x03001004; WORD 2; // Task Substate (Doesn't allow barrel update)
WORD 0x03001168; WORD 1; // Player Entity Kind
WORD 0x03001169; WORD 0; // Player Entity ID
WORD 0x0300116C; WORD 1; // Player Action State
//WORD 0x03003DC0; WORD 0; // Frozen State
WORD 0x0300400A; WORD 0; // Textbox (seems to be more than textbox)
WORD 0x0300400B; WORD 0; // Control
WORD 0x02034490; WORD 0; // Pause Disabled (OG will set to 1)
WORD 0xFF;

// Checks that the address is any of the values after it until it hits the terminator 0xFF
// Not yet implemented
ALIGN 4
multiValueCheck:
WORD 0x03004028; BYTE 0x0 0x1 0x2 0x3 0x4 0x5 0x7 0x9 0x19 0x1A; BYTE 0xFF


// add ap item handler, hooks into PlayerNormal handler so it only runs when Link's Action State is 1
PUSH; ORG $701D4; jumpToHack(apItem); POP
ALIGN 4
apItem:
#incbin "asm/apItem.dmp"
POIN idsGiveItem
POIN idsSetInventory
WORD 0x203FF10

idsGiveItem:
BYTE 0x1C // Bottle 1
BYTE 0x1D // Bottle 2
BYTE 0x1E // Bottle 3
BYTE 0x1F // Bottle 4
BYTE 0x36 // Dog Food
BYTE 0x50 // Dungeon Map
BYTE 0x51 // Dungeon Compass
BYTE 0x52 // Dungeon Big Key
BYTE 0x53 // Dungeon Small Key
BYTE 0x54 // 1 Rupee
BYTE 0x55 // 5 Rupees
BYTE 0x56 // 20 Rupees
BYTE 0x57 // 50 Rupees
BYTE 0x58 // 100 Rupees
BYTE 0x59 // 200 Rupees
BYTE 0x5D // 5 Bombs
BYTE 0x5E // 5 Arrows
BYTE 0x5F // Recovery Heart
BYTE 0x64 // Big Wallet
BYTE 0x6C // 10 Bombs
BYTE 0x6D // 30 Bombs
BYTE 0x6E // 10 Arrows
BYTE 0x6F // 30 Arrows
BYTE 0xFF // TERMINATOR

idsSetInventory:
BYTE 0x0F // Lantern
BYTE 0x11 // Gust Jar
BYTE 0x12 // Cane of Pacci
BYTE 0x13 // Mole Mitts
BYTE 0x14 // Roc's Cape
BYTE 0x15 // Pegasus Boots
BYTE 0x17 // Ocarina
BYTE 0x37 // LonLon Key
BYTE 0x38 // Wakeup Mushroom
BYTE 0x39 // Red Book
BYTE 0x3A // Green Book
BYTE 0x3B // Blue Book
BYTE 0x3C // Graveyard Key
BYTE 0x3D // Tingle Trophy
BYTE 0x3E // Carlov Medal
BYTE 0x44 // Grip Ring
BYTE 0x45 // Power Bracelets
BYTE 0x46 // Flippers
BYTE 0x5B // Jabber Nut
BYTE 0xFF // TERMINATOR

// Temporary fix for Graveyard Key, crow never removes the key from inventory
//PUSH; ORG $9867; BYTE 1; POP

#ifndef swiftbladeIDojoItem
	#define swiftbladeIDojoItem "0x4D"
#endif
#ifndef swiftbladeIDojoSub
	#define swiftbladeIDojoSub "0x00"
#endif
#ifndef swiftblade1DojoItem
	#define swiftblade1DojoItem "0x48"
#endif
#ifndef swiftblade1DojoSub
	#define swiftblade1DojoSub "0x00"
#endif
#ifndef swiftblade2DojoItem
	#define swiftblade2DojoItem "0x4B"
#endif
#ifndef swiftblade2DojoSub
	#define swiftblade2DojoSub "0x00"
#endif
#ifndef swiftblade3DojoItem
	#define swiftblade3DojoItem "0x4A"
#endif
#ifndef swiftblade3DojoSub
	#define swiftblade3DojoSub "0x00"
#endif
#ifndef swiftblade4DojoItem
	#define swiftblade4DojoItem "0x4E"
#endif
#ifndef swiftblade4DojoSub
	#define swiftblade4DojoSub "0x00"
#endif
#ifndef graybladeDojoItem
	#define graybladeDojoItem "0x49"
#endif
#ifndef graybladeDojoSub
	#define graybladeDojoSub "0x00"
#endif
#ifndef wavebladeDojoItem
	#define wavebladeDojoItem "0x4F"
#endif
#ifndef wavebladeDojoSub
	#define wavebladeDojoSub "0x00"
#endif
#ifndef grimbladeDojoItem
	#define grimbladeDojoItem "0x4C"
#endif
#ifndef grimbladeDojoSub
	#define grimbladeDojoSub "0x00"
#endif
#ifndef scarbladeDojoItem
	#define scarbladeDojoItem "0x73"
#endif
#ifndef scarbladeDojoSub
	#define scarbladeDojoSub "0x00"
#endif
#ifndef splitbladeDojoItem
	#define splitbladeDojoItem "0x74"
#endif
#ifndef splitbladeDojoSub
	#define splitbladeDojoSub "0x00"
#endif
#ifndef greatbladeDojoItem
	#define greatbladeDojoItem "0x75"
#endif
#ifndef greatbladeDojoSub
	#define greatbladeDojoSub "0x00"
#endif

PUSH; ORG itemTownDojo1; BYTE swiftblade1DojoItem swiftblade1DojoSub; POP
PUSH; ORG itemTownDojo2; BYTE swiftblade2DojoItem swiftblade2DojoSub; POP
PUSH; ORG itemTownDojo3; BYTE swiftblade3DojoItem swiftblade3DojoSub; POP
PUSH; ORG itemTownDojo4; BYTE swiftblade4DojoItem swiftblade4DojoSub; POP
PUSH; ORG itemCrenelDojo; BYTE graybladeDojoItem graybladeDojoSub; POP
PUSH; ORG itemCastleDojo; BYTE grimbladeDojoItem grimbladeDojoSub; POP
PUSH; ORG itemHyliaDojo; BYTE wavebladeDojoSub wavebladeDojoSub; POP
PUSH; ORG itemSwampGraveDojo; BYTE swiftbladeIDojoItem swiftbladeIDojoSub; POP
PUSH; ORG itemSwampWaterfallDojo; BYTE scarbladeDojoItem scarbladeDojoSub; POP
PUSH; ORG itemFallsDojo; BYTE splitbladeDojoItem splitbladeDojoSub; POP
PUSH; ORG itemNorthFieldDojo; BYTE greatbladeDojoItem greatbladeDojoSub; POP

#ifndef bottleScrubItem
	#define bottleScrubItem	0x1C
#endif
#ifndef bottleScrubSub
	#define bottleScrubSub	0x00
#endif
#ifndef gripScrubItem
	#define gripScrubItem	0x44
#endif
#ifndef gripScrubSub
	#define gripScrubSub	0x00
#endif
//#ifndef stoneScrubItem
//	#define stoneScrubItem	0x5C
//#endif
//#ifndef stoneScrubSub
//	#define stoneScrubSub	0x00
//#endif
PUSH; ORG itemTrilbyScrub; BYTE bottleScrubItem bottleScrubSub; POP
PUSH; ORG itemCrenelScrub; BYTE gripScrubItem gripScrubSub; POP
//PUSH; ORG itemUnknownScrub; BYTE stoneScrubItem stoneScrubSub; POP


#ifndef carlovSpotItem
    #define carlovSpotItem 0x3E
#endif
#ifndef carlovSpotSub
    #define carlovSpotSub 0x00
#endif

PUSH; ORG itemCarlov; BYTE carlovSpotItem carlovSpotSub; POP

#ifndef walletShopItem
	#define walletShopItem "0x64"
#endif
#ifndef walletShopSub
	#define walletShopSub "0x00"
#endif
#ifndef boomerangShopItem
	#define boomerangShopItem "0x0B"
#endif
#ifndef boomerangShopSub
	#define boomerangShopSub "0x00"
#endif
#ifndef quiverShopItem
	#define quiverShopItem "0x66"
#endif
#ifndef quiverShopSub
	#define quiverShopSub "0x00"
#endif
#ifndef dogShopItem
	#define dogShopItem "0x36"
#endif
#ifndef dogShopSub
	#define dogShopSub "0x00"
#endif

PUSH; ORG itemStockwell80Item; BYTE walletShopItem walletShopSub; POP
PUSH; ORG itemStockwell300Item; BYTE boomerangShopItem boomerangShopSub; POP
PUSH; ORG itemStockwell600Item; BYTE quiverShopItem quiverShopSub; POP
PUSH; ORG itemStockwellBackItem; BYTE dogShopItem dogShopSub; POP
